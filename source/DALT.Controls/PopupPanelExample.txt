#region SAMPLE VIEWMODEL IMPLEMENTING THE POPUP
/*
    public class SampleViewModel : INotifyPropertyChanged
    {
        #region Fields

        private object _popupContent;
        private bool _isPopupVisible;
        private List<object> _popupContentOptions;

        #endregion

        public SampleViewModel()
        {
            PopupContentOptions = new List<object>
            {
                new Address(),
                new Phone(),
                new Email()
            };
        }


        #region Properties

        public object PopupContent
        {
            get { return _popupContent; }
            set
            {
                if (value != _popupContent)
                {
                    _popupContent = value;
                    OnPropertyChanged("PopupContent");
                }
            }
        }

        public List<object> PopupContentOptions
        {
            get { return _popupContentOptions; }
            set
            {
                if (value != _popupContentOptions)
                {
                    _popupContentOptions = value;
                    OnPropertyChanged("PopupContentOptions");
                }
            }
        }

        public bool IsPopupVisible
        {
            get { return _isPopupVisible; }
            set
            {
                if (value != _isPopupVisible)
                {
                    _isPopupVisible = value;
                    OnPropertyChanged("IsPopupVisible");
                }
            }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler handler = this.PropertyChanged;
            if (handler != null)
            {
                var e = new PropertyChangedEventArgs(propertyName);
                handler(this, e);
            }
        }

        #endregion // INotifyPropertyChanged Members
    }
    */
#endregion


#region SAMPLE MAINWINDOW.XAML IMPLEMENTING THE POPUP
/*
<Window x:Class="PopupPanelSample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525"
        x:Name="RootWindow"
        xmlns:local="clr-namespace:PopupPanelSample">

    <DockPanel>
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Background="LightSteelBlue">
            
            <TextBlock Text="Select Popup Content" VerticalAlignment="Center" Margin="5" />
            
            <ComboBox x:Name="PropertyComboBox" Margin="10" Width="150"
                      ItemsSource="{Binding PopupContentOptions}"
                      SelectedItem="{Binding PopupContent}" />

            <ToggleButton IsChecked="{Binding IsPopupVisible}" Content="Toggle Popup Visibility" VerticalAlignment="Center" />
            
        </StackPanel>
        
        <DockPanel DockPanel.Dock="Left" Width="50" Background="LightSteelBlue" />
        
        <Grid x:Name="InfoPanel">
           
            <!-- Sample for Background Example -->
                <Label Content="Background Sample" Height="150" Width="150"
                       HorizontalAlignment="Center" VerticalAlignment="Center" 
                       Background="LightSteelBlue"/>
            
            <!-- Popup -->
            <local:PopupPanel local:PopupParent="{Binding ElementName=InfoPanel}"
                              local:PopupPanel.IsPopupVisible="{Binding IsPopupVisible}"
                              Content="{Binding PopupContent}">
                
                <local:PopupPanel.Resources>
                    <DataTemplate DataType="{x:Type local:Address}">
                        <Border BorderBrush="Red" BorderThickness="2" Background="White" Padding="20">
                            <Label Content="{Binding Name}" />
                        </Border>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type local:Phone}">
                        <Border BorderBrush="Blue" BorderThickness="2" Background="White" Padding="20">
                            <Label Content="{Binding Name}" />
                        </Border>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type local:Email}">
                        <Border BorderBrush="Green" BorderThickness="2" Background="White" Padding="20">
                            <Label Content="{Binding Name}" />
                        </Border>
                    </DataTemplate>
                </local:PopupPanel.Resources>
                
               
            </local:PopupPanel>

        </Grid>
    </DockPanel>
</Window>
*/
#endregion